<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-26T15:28:23 IST" name="Default suite" finished-at="2021-09-26T15:28:58 IST" duration-ms="35392">
    <groups>
    </groups>
    <test started-at="2021-09-26T15:28:23 IST" name="Default test" finished-at="2021-09-26T15:28:58 IST" duration-ms="35392">
      <class name="test.LoginTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:23 IST" name="setUpTest" finished-at="2021-09-26T15:28:23 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:24 IST" name="beforeTest" finished-at="2021-09-26T15:28:28 IST" duration-ms="4499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:28 IST" name="loginWithUsernameAndPassword" data-provider="loginCredentials" finished-at="2021-09-26T15:28:31 IST" duration-ms="2810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Doe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThisIsNotAPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:31 IST" name="afterTest" finished-at="2021-09-26T15:28:32 IST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:32 IST" name="beforeTest" finished-at="2021-09-26T15:28:35 IST" duration-ms="3535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:35 IST" name="loginWithUsernameAndPassword" data-provider="loginCredentials" finished-at="2021-09-26T15:28:38 IST" duration-ms="2763" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test1]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:55)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertTrue(Assert.java:31)
at pages.LoginPage.loginWithUsernameAndPassword(LoginPage.java:56)
at test.LoginTest.loginWithUsernameAndPassword(LoginTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:38 IST" name="afterTest" finished-at="2021-09-26T15:28:39 IST" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:39 IST" name="beforeTest" finished-at="2021-09-26T15:28:42 IST" duration-ms="3706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test1()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:42 IST" name="test1" finished-at="2021-09-26T15:28:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:42 IST" name="afterTest" finished-at="2021-09-26T15:28:43 IST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:43 IST" name="beforeTest" finished-at="2021-09-26T15:28:47 IST" duration-ms="3771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="loginErrorValidation(java.lang.String,java.lang.String)[pri:1, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:47 IST" name="loginErrorValidation" data-provider="loginCredentials" finished-at="2021-09-26T15:28:49 IST" duration-ms="2811" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Doe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThisIsNotAPassword]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:55)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertTrue(Assert.java:31)
at pages.LoginPage.loginErrorValidation(LoginPage.java:76)
at test.LoginTest.loginErrorValidation(LoginTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:49 IST" name="afterTest" finished-at="2021-09-26T15:28:50 IST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:50 IST" name="beforeTest" finished-at="2021-09-26T15:28:55 IST" duration-ms="4466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="loginErrorValidation(java.lang.String,java.lang.String)[pri:1, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:55 IST" name="loginErrorValidation" data-provider="loginCredentials" finished-at="2021-09-26T15:28:57 IST" duration-ms="2801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:57 IST" name="afterTest" finished-at="2021-09-26T15:28:58 IST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginTest@7d4f9aae]" started-at="2021-09-26T15:28:59 IST" name="tearDown" finished-at="2021-09-26T15:28:59 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
